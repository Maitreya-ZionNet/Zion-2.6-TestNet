#!/usr/bin/env bash

# Frontend dev runner for macOS
# - Creates/updates frontend/.env.local with Ryzen backend endpoints
# - Installs dependencies if needed
# - Starts Next.js dev server with hot reload
#
# Usage:
#   bash scripts/frontend-dev.sh [--host <ip-or-dns>] [--pool-port 3333] [--shim-port 18089] [--adapter-port 18099] [--open]
# Defaults:
#   host=91.98.122.165, pool=3333, shim=18089, adapter=18099

set -euo pipefail

ROOT_DIR="$(cd "$(dirname "$0")"/.. && pwd)"
FRONT_DIR="$ROOT_DIR/frontend"

HOST="91.98.122.165"
POOL_PORT=3333
SHIM_PORT=18089
ADAPTER_PORT=18099
OPEN_BROWSER=0

while [[ $# -gt 0 ]]; do
  case "$1" in
    --host) HOST="$2"; shift 2;;
    --pool-port) POOL_PORT="$2"; shift 2;;
    --shim-port) SHIM_PORT="$2"; shift 2;;
    --adapter-port) ADAPTER_PORT="$2"; shift 2;;
    --open) OPEN_BROWSER=1; shift;;
    *) echo "Unknown option: $1" >&2; exit 1;;
  esac
done

if ! command -v node >/dev/null 2>&1; then
  echo "ERROR: Node.js není nainstalován. Nainstaluj Node 18+ (např. brew install node)." >&2
  exit 1
fi
if ! command -v npm >/dev/null 2>&1; then
  echo "ERROR: npm není k dispozici (součást Node)." >&2
  exit 1
fi

echo "[frontend-dev] Repo: $ROOT_DIR"
echo "[frontend-dev] Frontend: $FRONT_DIR"
echo "[frontend-dev] Target backend => host=$HOST pool=$POOL_PORT shim=$SHIM_PORT adapter=$ADAPTER_PORT"

if [[ ! -d "$FRONT_DIR" ]]; then
  echo "ERROR: Nenalezen adresář 'frontend/'." >&2
  exit 1
fi

cd "$FRONT_DIR"

# Prepare .env.local for Next.js (both client and server side vars)
ENV_FILE=".env.local"
echo "[frontend-dev] Writing $ENV_FILE"
cat > "$ENV_FILE" <<ENV
# Auto-generated by scripts/frontend-dev.sh
NEXT_PUBLIC_ZION_HOST=$HOST
NEXT_PUBLIC_ZION_POOL_PORT=$POOL_PORT
NEXT_PUBLIC_ZION_SHIM_PORT=$SHIM_PORT

ZION_HOST=$HOST
ZION_POOL_PORT=$POOL_PORT
ZION_SHIM_PORT=$SHIM_PORT
ZION_ADAPTER_PORT=$ADAPTER_PORT
ENV

# Install deps if node_modules missing
if [[ ! -d node_modules ]]; then
  echo "[frontend-dev] Installing dependencies (npm ci if lockfile present)"
  if [[ -f package-lock.json ]]; then
    npm ci
  else
    npm install
  fi
fi

if [[ ${OPEN_BROWSER} -eq 1 ]]; then
  # best-effort open default browser
  (sleep 2; open "http://localhost:3000") >/dev/null 2>&1 &
fi

echo "[frontend-dev] Starting Next.js dev server on http://localhost:3000"
npm run dev
